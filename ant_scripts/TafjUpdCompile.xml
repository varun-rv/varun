<project name="T24TafjUpdates" default="all">

<property environment="env" />
<property name="homedir" value="${basedir}"/>
<property name="sourcePath" value="/glodev4/intbkp/T24_Updates/Update_Sources"/>
<property name="integUtilPath" value="/glodev5/t24bldin/bnk/bnk.run/INTEGUTIL/Integ_Utilities/T24_Updates/Update_Utilities"/>
<property name="RegPathT24BP" value="/regstorage/updatebkp/buildtars"/>
<property name="UpdExtn" value="${OsExtn}"/>

<taskdef resource="net/sf/antcontrib/antlib.xml" /> 

<property file="${env.TAFJ_HOME}${file.separator}conf${file.separator}tafj.properties" />

    <path id="javac.classpath">
    	<fileset dir="${env.JAVA_HOME}${file.separator}lib">
       	<include name="**${file.separator}tools.jar" />
       </fileset>
    </path>

    <path id="conv.classpath">
            <fileset dir="${env.TAFJ_HOME}${file.separator}lib" includes="**/*.jar" />
            <fileset dir="${env.TAFJ_HOME}${file.separator}ext" includes="**/*.jar" />
            <fileset dir="${env.TAFJ_HOME}${file.separator}dbscripts" includes="**/*.jar" />
            <path refid="javac.classpath" />
    </path>

    <scriptdef language="javascript" name="trim-properties">
		<attribute name="myproperty" />
		<attribute name="myproperty.trimmed" />
		if (attributes.get( "myproperty" )!= null) {
            		project.setProperty(attributes.get( "myproperty.trimmed" ), attributes.get( "myproperty" ).trim())
		}
    </scriptdef>

<scriptdef name="propertyreset" language="javascript"
    description="Allows to assign @{property} new value">
    <attribute name="name"/>
    <attribute name="value"/>
        project.setProperty(attributes.get("name"), attributes.get("value"));
</scriptdef>

<scriptdef language="javascript" name="lower">
    <attribute name="string" />
    <attribute name="to" />
    project.setProperty( attributes.get( "to" ),attributes.get( "string" ).toLowerCase() );
</scriptdef>

<target name="all">

    <delete file="${homedir}${file.separator}UPDATE.NAMES.${rel}"/> 
    <delete file="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT.${OsExtn}.log"/>    
    <delete dir="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT"/>
    <scp trust="true" failonerror="false" file="t24bldin:${t24bldinpasswd}@10.93.5.153:${integUtilPath}/Artifacts/UPDATE.NAMES.${rel}" todir="${homedir}"/>
<!-- Process Updates-->
    <if>
        <available file="${homedir}${file.separator}UPDATE.NAMES.${rel}" type="file"/>
        <then>
            <lower string="${rel}" to="rel_lower" />
            <loadfile property="UpdFile" srcfile="${homedir}${file.separator}UPDATE.NAMES.${rel}"/>
            <for param="line" list="${UpdFile}" delimiter="${line.separator}">
              <sequential>
                <echo>@{line}</echo>
                <propertyreset name="TempUpdName" value="@{line}"/>
                <antcall target="Getsource"/>
              </sequential>
            </for>
        </then>
    </if>   
    
<!-- Display compilation result -->
    <available file="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT.${OsExtn}.log" type="file" property="T24UpdResult"/>
    <if>
        <isset property="T24UpdResult" />
        <then>
            <!-- remove <scp trust="true" file="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT.${OsExtn}.log" todir="t24bldin:${t24bldinpasswd}@10.93.5.153:/${integUtilPath}/Artifacts" /> -->
            <fail message="Updates failed due to compilation failure"/>
        </then>
        <else>
            <echo message="Updates successfull..!"/>
            <echo message="${OsExtn} - All updates successfull..!" output="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT.${OsExtn}.log" append="true"/>
           <!-- remove <scp trust="true" file="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT.${OsExtn}.log" todir="t24bldin:${t24bldinpasswd}@10.93.5.153:/${integUtilPath}/Artifacts" /> -->
        </else>
    </if>
    
</target>

<target name="Compile">
     <condition property="isWindows">                
         <os family="windows" />        
     </condition>
    <if>
       <equals arg1="${isWindows}" arg2="true" />
	<then>
           <property name="exectype" value="cmd"/>
        </then>
    <else>
        <property name="exectype" value="sh"/>
    </else>
    </if>
    <propertyreset name="LogfilePath" value="${homedir}${file.separator}build${file.separator}log${file.separator}${TempUpdName}.log"/>
    <delete file="${homedir}${file.separator}build${file.separator}log${file.separator}${TempUpdName}.log"/>
         
       <delete dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}${Prod}${file.separator}tafc_components"/>
       <!--Compile Updates in TAFJ using Component Build --> 

            <propertyreset name="FailText" value="BUILD FAILED"/>
            <echo message="Compiling Update ${TempUpdName} in TAFJ in ${UpdExtn}..."/>
            <exec dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}T24BuildDependencies" executable="${exectype}" output="${homedir}${file.separator}build${file.separator}log${file.separator}${TempUpdName}.log" append="true">
                <arg value="ant" />
                <arg value="run-tcomponent-build" />
                <arg value="-Dcomplist=${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}${Prod}${file.separator}${CompName}" />
            </exec>
            <concat destfile="${homedir}${file.separator}build${file.separator}log${file.separator}${TempUpdName}.log" append="true">
                <filelist dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}logs" files="${CompName}.log"/>
            </concat>
            <!-- Copy libraries -->
            <copy failonerror="false" todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}" overwrite="true" flatten="true" >
                <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}jars" includes="*.jar" />
            </copy>

         <copy failonerror="false" todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}" overwrite="true" flatten="true" >
                <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}${CompName}${file.separator}build${file.separator}dist" includes="lib${file.separator}data${file.separator}java${file.separator}*, lib${file.separator}t24service${file.separator}java${file.separator}*" />
         </copy>

         <path id="precompile.path.id">
    		<pathelement location="${temn.tafj.directory.precompile}" />
	     </path>
	     <property name="precompile.path.ref" refid="precompile.path.id" />
	     <trim-properties myproperty="${precompile.path.ref}" myproperty.trimmed="precompile.path" />

            <!-- Copy compiled jars to Precopile Path-->
            <copy failonerror="false" todir="${precompile.path}" overwrite="true" flatten="true" >
                  <fileset dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}" includes="*.jar"/>
            </copy>

            <!-- Copy extensions -->
   	    <condition property="pathExist" else="false">
		<and>
		<available file="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}${CompName}${file.separator}build${file.separator}dist${file.separator}lib${file.separator}proxyAdaptor${file.separator}java" type="dir"/>
		<available file="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}${CompName}${file.separator}build${file.separator}dist${file.separator}lib${file.separator}ejb${file.separator}tafj" type="dir"/>
		<available file="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}${CompName}${file.separator}build${file.separator}dist${file.separator}lib${file.separator}ws${file.separator}java" type="dir"/>
		</and>	
	   </condition>

           <if>
		<equals arg1="${pathExist}" arg2="true"/>
            <then> 
            <mkdir dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}" />            
            <mkdir dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}${CompName}" />
            <mkdir dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}${CompName}${file.separator}t24Proxy" />
            <mkdir dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}${CompName}${file.separator}t24ejb" />
            <mkdir dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}${CompName}${file.separator}t24ws" /> 

            <copy failonerror="false" todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}${CompName}${file.separator}t24Proxy" overwrite="true" flatten="true" >
                <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}${CompName}${file.separator}build${file.separator}dist" includes="lib${file.separator}proxyAdaptor${file.separator}java${file.separator}*" />
            </copy>

            <copy failonerror="false" todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}${CompName}${file.separator}t24ejb" overwrite="true" flatten="true" >
                <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}${CompName}${file.separator}build${file.separator}dist" includes="lib${file.separator}ejb${file.separator}tafj${file.separator}*" />
            </copy>     

            <copy failonerror="false" todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}${CompName}${file.separator}t24ws" overwrite="true" flatten="true" >
                <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}${CompName}${file.separator}build${file.separator}dist" includes="lib${file.separator}ws${file.separator}java${file.separator}*">
                <type type="file"/>
                </fileset>
            </copy>

            <copy failonerror="false" todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}${file.separator}Extensions${file.separator}${CompName}${file.separator}t24ws" overwrite="true" flatten="true" >
                <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}build${file.separator}${CompName}${file.separator}build${file.separator}dist" includes="lib${file.separator}data${file.separator}java${file.separator}*">
                </fileset>
            </copy>

            </then>
            </if>

		<resourcecount property="count.libs">
            <fileset dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}">
                <include name="*.jar"/>
            </fileset>
        </resourcecount>
        <echo message="Count of jars in ${TempUpdName} is ${count.libs}"/>
        
        <if>
            <equals arg1="${count.libs}" arg2="0" trim="true"/>
            <then>
                <property name="nolibs" value="No Jars formed"/> 
            </then>
        </if>
			
	<jar destfile="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}.jar">
    	 	<fileset dir="${homedir}${file.separator}TAFJ.JARS" includes="${TempUpdName}_${UpdExtn}${file.separator}**/*" />
 	</jar>


    <delete dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}"/>
    <!-- remove <delete dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE"/> -->
    <echo message="Checking log..."/>
    <local name="CompileResult"/>
    <loadfile property="CompileResult" srcfile="${LogfilePath}">       
     <filterchain>        
       <linecontainsregexp>           
         <regexp pattern="${FailText}"/>         
       </linecontainsregexp>       
     </filterchain>    
    </loadfile>
    <if>
        <isset property="CompileResult" />
        <then>
            <mkdir dir="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT"/>
            <echo message="${TempUpdName} Update compilation failed..!"/>
            <copy file="${homedir}${file.separator}build${file.separator}log${file.separator}${TempUpdName}.log" todir="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT"/>
            <echo message="${TempUpdName} Update compilation failed..!" output="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT.${OsExtn}.log" append="true"/>
            <echo message="${CompileResult}" output="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT.${OsExtn}.log" append="true"/>
        </then>
        <else>
            <echo message="${TempUpdName} Update compilation Success..!"/>
<!--            <scp trust="true" file="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}.tar" todir="updlive:updlive@10.44.5.110:/storage/T24/updlive/updlive.run/TEMP.UPDATES"/> -->
        </else>
    </if>

	<if>
        <isset property="nolibs" />
        <then>
            <mkdir dir="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT"/> 
            <echo message="${TempUpdName} Update has no jars..!"/>
            <echo message="${TempUpdName} Update has no jars..!" output="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT.${OsExtn}.log" append="true"/>
            <copy file="${homedir}${file.separator}build${file.separator}log${file.separator}${TempUpdName}.log" todir="${homedir}${file.separator}build${file.separator}log${file.separator}${rel}.UPDATE.RESULT"/>
        </then>
    </if>   

    <var name="count.libs" unset="true"/>
    <var name="nolibs" unset="true"/>

	
</target>

<target name="Getsource">

    <delete dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE"/>
    <delete file="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE.tar"/>
    <delete file="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE.tar.gz"/> 
    <delete dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}"/>
    <mkdir dir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}"/>

    <scp trust="true" file="t24bldin:${t24bldinpasswd}@10.93.5.153:${sourcePath}/${rel}/${TempUpdName}.SOURCE.tar.gz" todir="${homedir}${file.separator}TAFJ.SOURCE"/> 
    <gunzip src="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE.tar.gz" dest="${homedir}${file.separator}TAFJ.SOURCE"/>
    <untar src="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE.tar" dest="${homedir}${file.separator}TAFJ.SOURCE"/>

    <replace dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE" token="${rel}_PLATFORM" value="${rel}_${UpdExtn}">
      <include name="*.xml"/>
    </replace>

    <!-- Move xml files & data records to Update directory -->
    <move todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}">
        <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE">
          <include name="*.xml"/>
        </fileset>
        <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE"  >
            <filename regex="REC([0-9])\\*"  />
        </fileset>
    </move>

<!-- Copy update release record to Update directory -->
    <copy file="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}${TempUpdName}" todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}"/>

<!-- Convert Update Release Record, xml files and data records to UTF8  -->
     <echo message="----------------------------------------------------------------------------"/>
     <echo message="|                          UTF8 Conversion                                 |"/>
     <echo message="----------------------------------------------------------------------------"/>
     <java classname="com.temenos.tafj.tools.ConvertToUTF8" dir="." fork="yes" failonerror="true" output="${homedir}${file.separator}UTF8.COMO${file.separator}COMO.${TempUpdName}">
       	       <jvmarg value="-Dfile.encoding=UTF-8"/>
	       <arg line="-old ${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}" />
               <classpath refid="conv.classpath" />
     </java>

    <!-- Move xsl & logo files to Update directory -->
    <move todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}">
        <filelist dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE">
          <file name="critical.png"/>
          <file name="logo.jpg"/>
          <file name="update.xsl"/>
        </filelist>
    </move>

<!-- Copy Insert change alone Update directory -->
    <for param="Ins">
    <path id="Ins.list">
        <fileset dir="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE" includes="I_*" >
            <type type="file" />
        </fileset>
    </path>
    <sequential>
        <local name="Ins_lc" />
        <basename property="Ins_lc" file="@{Ins}" />
        <local name="CheckInsProp" />
        <loadfile property="CheckInsProp" srcfile="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}${TempUpdName}">       
         <filterchain>        
           <linecontainsregexp>           
             <regexp pattern="${Ins_lc}"/>         
           </linecontainsregexp>       
         </filterchain>    
        </loadfile>     
   
        <if>
            <isset property="CheckInsProp" />
            <then>
                <copy file="${homedir}${file.separator}TAFJ.SOURCE${file.separator}${TempUpdName}.SOURCE${file.separator}${Ins_lc}" todir="${homedir}${file.separator}TAFJ.JARS${file.separator}${TempUpdName}_${UpdExtn}"/>
            </then>
        </if>   
    </sequential>
    </for>
    
<!-- Below bit of code is to extract the component name from update name -->
    <propertyregex property="CompName"
          input="${TempUpdName}"
          regexp="\\*_([^\.]*)_\\*"
          select="\1"
          casesensitive="false" />
    
     <propertyregex property="Prod"
          input="${CompName}"
          regexp="([^\.]*)_\\*"
          select="\1"
          casesensitive="false" />

    <lower string="${CompName}" to="comp_lower" />
    <propertyreset name="CompLower" value="${comp_lower}"/>
    
    <antcall target="Compile"/>
    
</target>

</project>
